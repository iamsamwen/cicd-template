    - name: get current version
      run: |
        CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
        echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

    - name: create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_PASS }}
      with:
        tag_name: v${{ env.CURRENT_VERSION }}
        release_name: cicd-test-v${{ env.CURRENT_VERSION }}
        body: |
          ${{ github.event.pull_request.body }}
        draft: false
        prerelease: false


      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: automerge

      - name: 
        uses: "pascalgn/automerge-action@v0.15.3"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_REMOVE_LABELS: "automerge"

      - name: version and publish
        run: |
          if [ "${GITHUB_REF##*/}" = main ]; then
            npx lerna version --conventional-commits --conventional-graduate --dist-tag latest --create-release --yes
            npx lerna publish from-git --yes --dist-tag latest
          else
            npx lerna version --conventional-commits --conventional-prerelease --preid beta --yes
            npx lerna publish from-git --yes --dist-tag beta 
          fi
        env:
          GH_TOKEN: ${{ secrets.ACCESS_PASS }}

      # - name: setup tmp branch
      #   run: |
      #     TMP_BRANCH_NAME="$(uuidgen)-e2e-test"
      #     echo "TMP_BRANCH_NAME=$TMP_BRANCH_NAME" >> $GITHUB_ENV
      #     git branch $TMP_BRANCH_NAME
      #     git checkout $GITHUB_BASE_REF
      #     git merge $TMP_BRANCH_NAME -m "merge $GITHUB_REF_NAME by e2e-test"