git rev-parse --short HEAD

git checkout featureA       # Start from "Feature A" branch
git fetch origin            # Keep remote branches up to date
git rebase origin/main      # Rebase the "main" to "Feature A"
git checkout main           # Switch to main
git merge featureA --squash # Squash "Feature A" to end of main


TMP_BRANCH_NAME="$(git rev-parse --short HEAD)-tmp-$(date +%s)"

TMP_BRANCH_NAME="$(uuidgen)-e2e-test"

git checkout -b $TMP_BRANCH_NAME development

git add .

git commit -m "commit $TMP_BRANCH_NAME by pfapi"

git push --set-upstream origin $TMP_BRANCH_NAME

git checkout development

git merge $TMP_BRANCH_NAME -m "merge $TMP_BRANCH_NAME by pfapi"

git branch -d $TMP_BRANCH_NAME

git push origin --delete $TMP_BRANCH_NAME


let response = await octokit.request('POST /repos/<OWNER>/<REPO>/pulls', {
owner: '<YOUR-USER-NAME>',
repo: '<YOUR-REPO-NAME>',
title: '<SOME-TITLE>',
body: '<SOME-DESCRIPTION>',
head: '<YOUR-SOURCE-BRANCH>',
base: '<THE-DESTINATION-BRANCH>'
});

*************
note.txt
===================

push

GITHUB_REF_NAME=development
GITHUB_BASE_REF=

pulls

GITHUB_REF_NAME=20/merge
GITHUB_BASE_REF=development